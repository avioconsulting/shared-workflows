name: Maven Build Workflow

on:
  workflow_call:
    inputs:
      python-version:
        description: The python version to use, default '3.18'
        required: false
        type: string
        default: 3.13
      include-test-results:
        description: A flag to publish test results
        required: false
        type: boolean
        default: true
    outputs:
      app-version:
        description: The application version
        value: ${{ jobs.build.outputs.version }}
jobs:
  test:
    name: Build and Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'crewai[tools]'
          crewai install

      - name: PyTest
        run: uv run pytest test --junit-xml pytest.xml

      - name: Upload Test Results
        if: (!cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (Python ${{ matrix.python-version }})
          path: pytest.xml
  
  build:
    name: "Build and Publish artifacts"
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    permissions:
      contents: read
      issues: read
    steps:
      - name: Download Artifacts
        if: ${{ inputs.include-test-results }}
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        if: ${{ inputs.include-test-results }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"

      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Set up Python 
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'crewai[tools]'
          crewai install
          python -m build

      - name: Set Version
        id: set-version
        run: echo version=$(uv run toml get --toml-path=pyproject.toml project.version) >> $GITHUB_OUTPUT  

      - name: Print Version
        run: echo "Version ${{ steps.set-version.outputs.version }}"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/*.whl
            dist/*.gz
