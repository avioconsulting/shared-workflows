name: Gradle Post Release Workflow

on:
  workflow_call:
    inputs:
      app-version:
        description: Application version that was released
        required: true
        type: string
      java-distribution:
        description: The Java Distribution to use, default 'adopt-hotspot'
        required: false
        type: string
        default: adopt-hotspot
      java-version:
        description: The Java Version to use, default '8'
        required: false
        type: string
        default: 8
      main-branch:
        description: Main branch name
        required: false
        type: string
        default: main
      version-project:
        description: For use with multi-module projects, this is used to determine application version
        required: false
        type: string
      pr-reviewers:
        description: Users to be included on the post-release pull request
        required: false
        type: string
        default: adesjardin, manikmagar, kkingavio

env:
  is-check-into-main: ${{ github.event_name != 'pull_request' && github.ref == format('refs/head/{0}',inputs.main-branch) }}
  is-snapshot: ${{ contains(inputs.app-version, 'SNAPSHOT') }}

jobs:
  Prepare-Next-Snapshot:
    runs-on: ubuntu-latest
    # Cannot use env.* variables here - https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    if: ${{ !contains(inputs.app-version, 'SNAPSHOT') && github.event_name != 'pull_request' && contains(github.ref, inputs.main-branch) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          cache: gradle

      - name: Increment Version
        run: ./gradlew incrementPatch -Dversion.prerelease=SNAPSHOT

      # This uses a conditional to build 2 different echo commands
      # The first is for just a regular -> ./gradlew properties call
      # The second adds in a project reference -> ./gradlew version-project:properties
      - name: Set New Version Variable
        id: set-new-version
        run: ${{ inputs.version-project == '' }}  && echo "version=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" || echo "version=$(./gradlew ${{ inputs.version-project }}:properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          branch: "chore/v${{ steps.set-new-version.outputs.version }}"
          commit-message: "chore: [create-pull-request]  Auto increment to v${{ steps.set-new-version.outputs.version }}"
          title: "chore: Auto increment to v${{ steps.set-new-version.outputs.version }}"
          delete-branch: true
          assignees: ${{ github.actor }}
          reviewers: ${{ inputs.pr-reviewers }}
