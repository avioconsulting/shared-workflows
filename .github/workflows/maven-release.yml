name: Maven Release Workflow

on:
  workflow_call:
    inputs:
      app-version:
        description: Application version to release
        required: true
        type: string
      publish-maven-central:
        description: Publish artifact to maven central, enable this for mule plugins
        required: false
        type: boolean
        default: false
      java-distribution:
        description: The Java Distribution to use, default 'adopt-hotspot'
        required: false
        type: string
        default: adopt-hotspot
      java-version:
        description: The Java Version to use, default '8'
        required: false
        type: string
        default: 8
      maven-args:
        description: Maven arguments appended to maven calls
        required: false
        type: string
      main-branch:
        description: Main branch name
        required: false
        type: string
        default: main
        
env:
  is-check-into-main: ${{ github.event_name != 'pull_request' && github.ref == format('refs/head/{0}',inputs.main-branch) }}

jobs:
  Release:
    # Cannot use env.* variables here - https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    if: ${{ github.event_name != 'pull_request' && contains(github.ref,inputs.main-branch) }}
    runs-on: ubuntu-latest
    env:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      MAVEN_PUBLISH_USERNAME: ${{ secrets.MAVEN_PUBLISH_USERNAME }}
      MAVEN_PUBLISH_PASSWORD: ${{ secrets.MAVEN_PUBLISH_PASSWORD }}
      MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Download Build Artifacts (JARs only)
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target

      - name: Display structure of downloaded files
        run: ls -R

      - name: Set up JDK for maven central publish
        uses: actions/setup-java@v4
        if: ${{ env.OSSRH_USERNAME != '' }}
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          cache: maven
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase:  MAVEN_GPG_PASSPHRASE

      - name: Set up JDK for maven deployment credentials
        uses: actions/setup-java@v4
        if: ${{ env.MAVEN_PUBLISH_USERNAME != '' }}
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          cache: maven
          server-id: maven-publish
          server-username: MAVEN_PUBLISH_USERNAME
          server-password: MAVEN_PUBLISH_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase:  MAVEN_GPG_PASSPHRASE

      - name: Publish to Maven Central
        id: publish-to-maven-central
        if: ${{ inputs.publish-maven-central }}
        run: ./mvnw deploy -Drelease=true -DskipTests=true ${{ inputs.maven-args }}

      - name: JReleaser full-Release
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{ inputs.app-version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          JRELEASER_ANNOUNCE_SMTP_PASSWORD: ${{ secrets.JRELEASER_ANNOUNCE_SMTP_PASSWORD }}
          JRELEASER_ANNOUNCE_SMTP_USER: ${{ secrets.JRELEASER_ANNOUNCE_SMTP_USER }}
          JRELEASER_VERSION: 1.17.0
        with:
          version: ${{ env.JRELEASER_VERSION }}
          arguments: full-release

      - name: JReleaser release output
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties          

